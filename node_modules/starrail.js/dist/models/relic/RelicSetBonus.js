"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RelicSetBonus = void 0;
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = require("../../errors/AssetsNotFoundError");
const TextAssets_1 = require("../assets/TextAssets");
const hash_utils_1 = require("../../utils/hash_utils");
const StatProperty_1 = require("../StatProperty");
class RelicSetBonus {
    constructor(setId, needCount, client) {
        this.setId = setId;
        this.needCount = needCount;
        this.client = client;
        const _data = client.cachedAssetsManager.getExcelData("RelicSetSkillConfig", this.setId, needCount);
        if (!_data)
            throw new AssetsNotFoundError_1.AssetsNotFoundError("RelicSetBonus", `${this.setId}-${this.needCount}`);
        this._data = _data;
        const json = new config_file_js_1.JsonReader(this._data);
        this.description = new TextAssets_1.TextAssets((0, hash_utils_1.getStableHash)(json.getAsString("SkillDesc")), this.client);
        this.stats = json.get("PropertyList").mapArray((_, stat) => new StatProperty_1.StatPropertyValue(stat.getAsString(this.client.cachedAssetsManager.getObjectKeysManager().relicSetBonusStatPropertyTypeKey), stat.getAsNumber(this.client.cachedAssetsManager.getObjectKeysManager().relicSetBonusStatPropertyValueKey, "Value"), this.client));
    }
}
exports.RelicSetBonus = RelicSetBonus;
