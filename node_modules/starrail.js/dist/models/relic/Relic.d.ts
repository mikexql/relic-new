import { JsonObject } from "config_file.js";
import { StarRail } from "../../client/StarRail";
import { RelicData } from "./RelicData";
import { RelicMainStatData } from "./RelicMainStatGroup";
import { RelicSubStatData } from "./RelicSubStatGroup";
import { StatPropertyType, StatPropertyValue } from "../StatProperty";
export declare class Relic {
    readonly client: StarRail;
    readonly relicData: RelicData;
    readonly level: number;
    readonly mainStat: RelicMainStat;
    readonly subStats: RelicSubStat[];
    readonly _data: JsonObject;
    constructor(data: JsonObject, client: StarRail);
    static builder(): RelicBuilder;
}
export declare class RelicBuilder {
    data: JsonObject;
    relicData: RelicData | null;
    level(level: number): this;
    relic(relicData: RelicData): this;
    mainStat(type: StatPropertyType): this;
    addSubStat(type: StatPropertyType, count: number, steps: number): this;
    build(client: StarRail): Relic;
}
export declare class RelicMainStat extends StatPropertyValue {
    readonly mainStatData: RelicMainStatData;
    /** Relic's level */
    readonly level: number;
    /** Calculated by [mainStatData.baseValue](/api/interface/RelicMainStatData#baseValue) + [mainStatData.levelValue](/api/interface/RelicMainStatData#levelValue) \* [level](#level) */
    readonly value: number;
    constructor(mainStatData: RelicMainStatData, level: number);
}
export declare class RelicSubStat extends StatPropertyValue {
    readonly subStatData: RelicSubStatData;
    /** The number of times this SubStat has been enhanced */
    readonly count: number;
    readonly steps: number;
    /** Calculated by [subStatData.baseValue](/api/interface/RelicSubStatData#baseValue) \* [count](#count) + [subStatData.stepValue](/api/interface/RelicSubStatData#stepValue) \* [steps](#steps) */
    readonly value: number;
    constructor(subStatData: RelicSubStatData, count: number, steps: number);
}
