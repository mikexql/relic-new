"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserIcon = void 0;
const config_file_js_1 = require("config_file.js");
const AssetsNotFoundError_1 = require("../errors/AssetsNotFoundError");
const ImageAssets_1 = require("./assets/ImageAssets");
const TextAssets_1 = require("./assets/TextAssets");
const CharacterData_1 = require("./character/CharacterData");
class UserIcon {
    constructor(id, client) {
        this.id = id;
        this.client = client;
        let playerIconItem = this.client.cachedAssetsManager.getExcelData("ItemConfigAvatarPlayerIcon", this.id);
        const isCharacterIcon = !!playerIconItem;
        if (!playerIconItem) {
            const otherPlayerIcon = this.client.cachedAssetsManager.getExcelData("ItemPlayerCard", this.id);
            if (!otherPlayerIcon)
                throw new AssetsNotFoundError_1.AssetsNotFoundError("UserIcon-Item", this.id);
            playerIconItem = otherPlayerIcon;
        }
        if (!playerIconItem)
            throw new AssetsNotFoundError_1.AssetsNotFoundError("UserIcon-Item", this.id);
        const itemJson = new config_file_js_1.JsonReader(playerIconItem);
        this._itemData = playerIconItem;
        const playerIcon = this.client.cachedAssetsManager.getExcelData(isCharacterIcon ? "AvatarPlayerIcon" : "PlayerIcon", this.id);
        if (!playerIcon)
            throw new AssetsNotFoundError_1.AssetsNotFoundError("UserIcon-Icon", this.id);
        const iconJson = new config_file_js_1.JsonReader(playerIcon);
        this._iconData = playerIcon;
        this.name = new TextAssets_1.TextAssets(itemJson.getAsNumber("ItemName", "Hash"), this.client);
        this.icon = new ImageAssets_1.ImageAssets(iconJson.getAsString("ImagePath"), this.client);
        this.itemIcon = new ImageAssets_1.ImageAssets(itemJson.getAsString("ItemIconPath"), this.client);
        this.figureIcon = new ImageAssets_1.ImageAssets(itemJson.getAsString("ItemFigureIconPath"), this.client);
        this.characterData = isCharacterIcon ? new CharacterData_1.CharacterData(iconJson.getAsNumber("AvatarID"), this.client) : null;
    }
}
exports.UserIcon = UserIcon;
